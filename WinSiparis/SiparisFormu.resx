<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aJwbEX7V5Y8XLuq8m0H/2Q==
</value>
  </data>
</root>